# References:
# - https://kodimensional.dev/github-actions
name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-test:
    name: cabal 3.6.2.0 / ghc 8.10.7
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup nix
        uses: cachix/install-nix-action@v15
        with:
          extra_nix_config: |
            trusted-public-keys = hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=
            substituters = https://hydra.iohk.io https://cache.nixos.org/

      - run: nix flake show

      - name: Update cabal index
        run: nix develop .#devShells.x86_64-linux.test --command cabal update

      - name: Freeze Cabal plan
        run: |
          nix develop .#devShells.x86_64-linux.test \
            --command cabal freeze --project-file=cabal.project.test

      - uses: actions/cache@v2
        name: Cache /nix/store
        with:
          path: /nix/store
          key: ${{ runner.os }}-${{ hashFiles('flake.lock') }}

      - name: Install dependencies
        run: |
          nix develop .#devShells.x86_64-linux.test \
            --command cabal build all --only-dependencies --project-file=cabal.project.test

      - uses: actions/cache@v2
        name: Cache ~/.cabal/store
        with:
          path: ~/.cabal/store
          key: ${{ runner.os }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Build
        run: |
          nix develop .#devShells.x86_64-linux.test \
            --command cabal build all --project-file=cabal.project.test

      - name: Test
        run: |
          nix develop .#devShells.x86_64-linux.test \
            --command cabal test --project-file=cabal.project.test

      - name: Documentation
        run: |
          nix develop .#devShells.x86_64-linux.test \
            --command cabal haddock --project-file=cabal.project.test

  deploy:
    name: Build release and deploy to Fly.io
    runs-on: ubuntu-20.04
    needs: [build-and-test]
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Build swoogle-server
        run: |
          docker run \
            --volume $PWD:/mnt \
            utdemir/ghc-musl:v23-ghc8107 \
            /mnt/bin/build-static

      - name: What's in here?
        run: |
          sudo apt install tree
          tree .

      - name: Send off to Fly.io
        uses: superfly/flyctl-actions@1.3
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
        with:
          args: "deploy --local-only"
